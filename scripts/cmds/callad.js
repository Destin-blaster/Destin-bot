const { getStreamsFromAttachment, log } = global.utils;
const mediaTypes = ["photo", 'png', "animated_image", "video", "audio"];

module.exports = {
	config: {
		name: "callad",
		version: "1.7",
		author: "NTKhang",
		countDown: 5,
		role: 0,
		description: {
			vi: "g·ª≠i b√°o c√°o, g√≥p √Ω, b√°o l·ªói,... c·ªßa b·∫°n v·ªÅ admin bot",
			en: "send report, feedback, bug,... to admin bot"
		},
		category: "CALL HOKAGE",
		guide: {
			vi: "   {pn} <tin nh·∫Øn>",
			en: "   {pn} <message>"
		}
	},

	langs: {
		vi: {
			missingMessage: "Vui l√≤ng nh·∫≠p tin nh·∫Øn b·∫°n mu·ªën g·ª≠i v·ªÅ admin",
			sendByGroup: "\n- ƒê∆∞·ª£c g·ª≠i t·ª´ nh√≥m: %1\n- Thread ID: %2",
			sendByUser: "\n- ƒê∆∞·ª£c g·ª≠i t·ª´ ng∆∞·ªùi d√πng",
			content: "\n\nN·ªôi dung:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%1\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng",
			success: "ƒê√£ g·ª≠i tin nh·∫Øn c·ªßa b·∫°n v·ªÅ %1 admin th√†nh c√¥ng!\n%2",
			failed: "ƒê√£ c√≥ l·ªói x·∫£y ra khi g·ª≠i tin nh·∫Øn c·ªßa b·∫°n v·ªÅ %1 admin\n%2\nKi·ªÉm tra console ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt",
			reply: "üìç Ph·∫£n h·ªìi t·ª´ admin %1:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%2\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ ti·∫øp t·ª•c g·ª≠i tin nh·∫Øn v·ªÅ admin",
			replySuccess: "ƒê√£ g·ª≠i ph·∫£n h·ªìi c·ªßa b·∫°n v·ªÅ admin th√†nh c√¥ng!",
			feedback: "üìù Ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng %1:\n- User ID: %2%3\n\nN·ªôi dung:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%4\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng",
			replyUserSuccess: "ƒê√£ g·ª≠i ph·∫£n h·ªìi c·ªßa b·∫°n v·ªÅ ng∆∞·ªùi d√πng th√†nh c√¥ng!",
			noAdmin: "Hi·ªán t·∫°i bot ch∆∞a c√≥ admin n√†o"
		},
		en: {
			missingMessage: "ùêûùêúùê´ùê¢ùêØùêûùê≥ ùêõùê¢ùêûùêß ùêØùê®ùê≠ùê´ùêû ùê¶ùêûùê¨ùê¨ùêöùê†ùêû ùê¨ùêöùêßùê¨ ùêüùêöùêÆùê≠ùêûùê¨ ùêù'ùê®ùê´ùê≠ùê°ùê®ùê†ùê´ùêöùê©ùê°ùêûüíÅ‚Äç‚ôÇÔ∏è",
			sendByGroup: "\n- ùêúùêûùê≠ ùêÆùê≠ùê¢ùê•ùê¢ùê¨ùêöùê≠ùêûùêÆùê´ ùêûùê¨ùê≠ ùêùùêöùêßùê¨ ùê•ùêö ùêúùêöùêØùêû %1\n- ùóßùóúùóó: %2",
			sendByUser: "\n- ùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùó≤ùóªùòÉùóºùòÜùó≤ÃÅ ùóΩùóÆùóø ùóπùôö ùô°'ùô™ùô©ùôûùô°ùôûùô®ùôñùô©ùôöùô™ùôß",
			content: "\n\nùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤:\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n%1\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nùó•ùó≤ÃÅùóΩùóºùóªùó±ùòÄ ùóÆÃÄ ùó∞ùó≤ ùó∫ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùóΩùóºùòÇùóø ùó∞ùóºùóªùòÅùó∂ùóªùòÇùó≤ùóø ùóÆÃÄ ùó±ùó∂ùòÄùó∞ùòÇùòÅùó≤ùóø ùóÆùòÉùó≤ùó∞ ùô°'ùô™ùô©ùôûùô°ùôûùô®ùôñùô©ùôöùô™ùôß",
			success: "ùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùó≤ùóªùòÉùóºùòÜùó≤ÃÅ ùóÆÃÄ %1 ùóµùóºùó∏ùóÆùó¥ùó≤(ùòÄ)  ùóÆùòÉùó≤ùó∞ ùòÄùòÇùó∞ùó∞ùó≤ÃÄùòÄ \n%2",
			failed: "\n\nùóòùó∞ùóµùó≤ùó∞ ùó±ùó≤ ùóπ'ùó≤ùóªùòÉùóºùó∂ùó≤ ùó±ùòÇ ùó∫ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùóÆÃÄ %1 ùóµùóºùó∏ùóÆùó¥ùó≤(ùòÄ) %1 \n%2\nùó©ùó≤ùòÇùó∂ùóπùóπùó≤ùòá ùóøùó≤ÃÅùó≤ùòÄùòÄùóÆùòÜùó≤ùóø ùóΩùóπùòÇùòÄ ùòÅùóÆùóøùó±. ùó†ùó≤ùóøùó∞ùó∂",
			reply: "üö≠ùê´ùêûùê©ùê®ùêßùê¨ùêû ùêùùêû ùê´ùêÆùêùùêûùêÆùê¨ ùêöùêúùê§ùêûùê´ùê¶ùêöùêß ùê®ùêÆ ùê•'ùêÆùêß ùêùùêûùê¨ ùêöùêÆùê≠ùê´ùêûùê¨ ùê¶ùê®ùê´ùê≠ùêûùê•ùê¨ ùêúùê®ùê¶ùê¶ùêû ùê•ùêÆùê¢ %1:\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÉ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n%2\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nùê´ùêûùê©ùê®ùêßùêùùê¨ ùêö ùêúùêû ùê¶ùêûùê¨ùê¨ùêöùê†ùêû ùê©ùê®ùêÆùê´ ùêúùê®ùêßùê≠ùê¢ùêßùêÆùêûùê´ ùê•ùêö ùêúùê®ùêßùêØ√©ùê´ùê¨ùêöùê≠ùê¢ùê®ùêß ùêöùêØùêûùêú ùêëùêîùêÉùêÑùêîùêí ùêÄùêÇùêäùêÑùêëùêåùêÄùêç„Äé%1„Äè",
			replySuccess: "ùê´ùêÆùêùùêûùêÆùê¨ ùêØùêö ùê´ùêûùêúùêûùêØùê®ùê¢ùê´ ùê≠ùê®ùêß ùê¶ùêûùê¨ùê¨ùêöùê†ùêû ùêùùêöùêßùê¨ ùê•ùêö ùêØùê¢ùê≠ùêûùê¨ùê¨ùêû ùêùùêû ùê•ùêö ùê•ùêÆùê¶ùê¢ùêûùê´ùêû ‚õî",
			feedback: "‚úâ ùó•ùó≤ÃÅùóΩùóºùóªùòÄùó≤ ùó±ùô™ ùô°'ùô™ùô©ùôûùô°ùôûùô®ùôñùô©ùôöùô™ùôß %1:\n- ùòÇùó∂ùó± ùó±ùó≤ ùô°'ùô™ùô©ùôûùô°ùôûùô®ùôñùô©ùôöùô™ùôß: %2%3\n\nùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤:\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n%4\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\nùó•ùó≤ÃÅùóΩùóºùóªùó±ùòÄ ùóÆÃÄ ùó∞ùó≤ ùó∫ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùóΩùóºùòÇùóø ùó∞ùóºùóªùòÅùó∂ùóªùòÇùó≤ùóø ùô©ùôñ ùó±ùó∂ùòÄùó∞ùòÇùô®ùô®ùôûùô§ùô£ ùóÆùòÉùó≤ùó∞ %1",
			replyUserSuccess: "üíÅüíÅüíÅüíÅüíÅ",
			noAdmin: "‚ùåüö´üö´üö´üö´‚ùå"
		}
	},

	onStart: async function ({ args, message, event, usersData, threadsData, api, commandName, getLang }) {
		const { config } = global.GoatBot;
		if (!args[0])
			return message.reply(getLang("missingMessage"));
		const { senderID, threadID, isGroup } = event;
		if (config.adminBot.length == 0)
			return message.reply(getLang("noAdmin"));
		const senderName = await usersData.getName(senderID);
		const msg = "==üì®ùó†ùóòùó¶ùó¶ùóîùóöùóòüì®=="
			+ `\n- ùòºùô™ùô©ùôöùô™ùôß ùôôùô™ ùô¢ùôöùô®ùô®ùôñùôúùôö: ${senderName}`
			+ `\n- ùó®ùóúùóó ùó±ùó≤ ùô°'ùô™ùô©ùôûùô°ùôûùô®ùôñùô©ùôöùô™ùôß: ${senderID}`
			+ (isGroup ? getLang("sendByGroup", (await threadsData.get(threadID)).threadName, threadID) : getLang("sendByUser"));

		const formMessage = {
			body: msg + getLang("content", args.join(" ")),
			mentions: [{
				id: senderID,
				tag: senderName
			}],
			attachment: await getStreamsFromAttachment(
				[...event.attachments, ...(event.messageReply?.attachments || [])]
					.filter(item => mediaTypes.includes(item.type))
			)
		};

		const successIDs = [];
		const failedIDs = [];
		const adminNames = await Promise.all(config.adminBot.map(async item => ({
			id: item,
			name: await usersData.getName(item)
		})));

		for (const uid of config.adminBot) {
			try {
				const messageSend = await api.sendMessage(formMessage, uid);
				successIDs.push(uid);
				global.GoatBot.onReply.set(messageSend.messageID, {
					commandName,
					messageID: messageSend.messageID,
					threadID,
					messageIDSender: event.messageID,
					type: "userCallAdmin"
				});
			}
			catch (err) {
				failedIDs.push({
					adminID: uid,
					error: err
				});
			}
		}

		let msg2 = "";
		if (successIDs.length > 0)
			msg2 += getLang("success", successIDs.length,
				adminNames.filter(item => successIDs.includes(item.id)).map(item => ` <@${item.id}> (${item.name})`).join("\n")
			);
		if (failedIDs.length > 0) {
			msg2 += getLang("failed", failedIDs.length,
				failedIDs.map(item => ` <@${item.adminID}> (${adminNames.find(item2 => item2.id == item.adminID)?.name || item.adminID})`).join("\n")
			);
			log.err("CALL ADMIN", failedIDs);
		}
		return message.reply({
			body: msg2,
			mentions: adminNames.map(item => ({
				id: item.id,
				tag: item.name
			}))
		});
	},

	onReply: async ({ args, event, api, message, Reply, usersData, commandName, getLang }) => {
		const { type, threadID, messageIDSender } = Reply;
		const senderName = await usersData.getName(event.senderID);
		const { isGroup } = event;

		switch (type) {
			case "userCallAdmin": {
				const formMessage = {
					body: getLang("reply", senderName, args.join(" ")),
					mentions: [{
						id: event.senderID,
						tag: senderName
					}],
					attachment: await getStreamsFromAttachment(
						event.attachments.filter(item => mediaTypes.includes(item.type))
					)
				};

				api.sendMessage(formMessage, threadID, (err, info) => {
					if (err)
						return message.err(err);
					message.reply(getLang("replyUserSuccess"));
					global.GoatBot.onReply.set(info.messageID, {
						commandName,
						messageID: info.messageID,
						messageIDSender: event.messageID,
						threadID: event.threadID,
						type: "adminReply"
					});
				}, messageIDSender);
				break;
			}
			case "adminReply": {
				let sendByGroup = "";
				if (isGroup) {
					const { threadName } = await api.getThreadInfo(event.threadID);
					sendByGroup = getLang("sendByGroup", threadName, event.threadID);
				}
				const formMessage = {
					body: getLang("feedback", senderName, event.senderID, sendByGroup, args.join(" ")),
					mentions: [{
						id: event.senderID,
						tag: senderName
					}],
					attachment: await getStreamsFromAttachment(
						event.attachments.filter(item => mediaTypes.includes(item.type))
					)
				};

				api.sendMessage(formMessage, threadID, (err, info) => {
					if (err)
						return message.err(err);
					message.reply(getLang("replySuccess"));
					global.GoatBot.onReply.set(info.messageID, {
						commandName,
						messageID: info.messageID,
						messageIDSender: event.messageID,
						threadID: event.threadID,
						type: "userCallAdmin"
					});
				}, messageIDSender);
				break;
			}
			default: {
				break;
			}
		}
	}
};
